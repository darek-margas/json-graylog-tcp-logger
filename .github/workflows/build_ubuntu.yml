name: Build Ubuntu Package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # This ensures all history and tags are fetched
        
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential debhelper dh-make

    - name: Build project
      run: |
         cd source
         make

    - name: Run tests
      run: |
        cd source
        make test
    - name: Prepare package files
      run: |
        # Try to get the latest tag, use a default if none exists
        LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.1.0")
        
        # If no tag was found, use the short commit hash
        if [ "$LATEST_TAG" = "v0.1.0" ]; then
          LATEST_TAG=$(git rev-parse --short HEAD)
        fi

        cd source
        mkdir -p debian
        cat << EOF > debian/control
        Source: json-graylog-tcp-logger
        Section: utils
        Priority: optional
        Maintainer: Darek <darek.margas@gmail.com>
        Build-Depends: debhelper (>= 9)
        Standards-Version: 3.9.8

        Package: json-graylog-tcp-logger
        Architecture: any
        Depends: \${shlibs:Depends}, \${misc:Depends}
        Description: STDIN to TCP Graylog logger
         JSON formatted data as input, feed into logger process, is being delivered by TCP connection to Graylog. 
        EOF

        echo "9" > debian/compat
        
        cat << EOF > debian/rules
        #!/usr/bin/make -f
        %:
        	dh \$@
        EOF
        chmod +x debian/rules

        cat << EOF > debian/changelog
        json-graylog-tcp-logger ($LATEST_TAG) unstable; urgency=medium

          * Release $LATEST_TAG

         -- Darek <darek.margas@gmail.com>  $(date -R)
        EOF

        # Verify files were created
        ls -R debian
        
    - name: Check debian files
      run: |
        cd source
        echo "Content of debian/control:"
        cat debian/control
        echo "Content of debian/compat:"
        cat debian/compat
        echo "Content of debian/rules:"
        cat debian/rules
        echo "Content of debian/changelog:"
        cat debian/changelog
    - name: Build Debian package
      run: |
        cd source
        dpkg-buildpackage -us -uc -b
        
    - name: Move Debian package
      run: |
        ls -l
        cd source
        ls -l
        mv ../*.deb .

    - name: Upload package artifact
      uses: actions/upload-artifact@v4
      with:
        name: ubuntu-package
        path: ./*.deb
        if-no-files-found: error
